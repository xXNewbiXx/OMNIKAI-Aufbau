{
  "name": "OMNIKAI Sales Core Pipeline",
  "version": "1.0.0",
  "description": "Complete sales pipeline from lead generation to payment collection with compliance-by-design",
  "created_by": "MANUS",
  "created_at": "2025-08-09T12:00:00Z",
  "owner": "Claude-Flow",
  "approval_required": "BOSS (ChatGPT)",
  "nodes": [
    {
      "id": "lead_intake",
      "name": "Lead Intake Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [100, 100],
      "parameters": {
        "httpMethod": "POST",
        "path": "lead-intake",
        "responseMode": "responseNode",
        "options": {
          "rawBody": true
        }
      },
      "webhookId": "omnikai-lead-intake",
      "typeVersion": 1
    },
    {
      "id": "gdpr_consent_check",
      "name": "GDPR Consent Validation",
      "type": "n8n-nodes-base.function",
      "position": [300, 100],
      "parameters": {
        "functionCode": "// GDPR Consent Validation\nconst leadData = items[0].json;\nconst region = leadData.region || 'UNKNOWN';\nconst consentGiven = leadData.consent_marketing || false;\nconst consentId = leadData.consent_id || null;\n\n// EU leads require explicit consent\nif (region === 'EU' && !consentGiven) {\n  throw new Error('EU lead requires explicit marketing consent');\n}\n\n// Log consent verification\nconst auditLog = {\n  timestamp: new Date().toISOString(),\n  lead_id: leadData.lead_id,\n  region: region,\n  consent_given: consentGiven,\n  consent_id: consentId,\n  compliance_check: 'PASS'\n};\n\nreturn {\n  json: {\n    ...leadData,\n    audit_log: auditLog,\n    compliance_status: 'APPROVED'\n  }\n};"
      },
      "typeVersion": 1
    },
    {
      "id": "lead_scoring",
      "name": "AI Lead Scoring",
      "type": "n8n-nodes-base.openAi",
      "position": [500, 100],
      "parameters": {
        "resource": "chat",
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are an AI lead scoring system for OMNIKAI. Score leads from 0-100 based on: company size (0-25), budget indicators (0-25), decision authority (0-25), timeline urgency (0-25). Return JSON with score and reasoning."
            },
            {
              "role": "user",
              "content": "=Score this lead: Company: {{$json.company_name}}, Size: {{$json.company_size}}, Budget: {{$json.budget_range}}, Role: {{$json.contact_role}}, Timeline: {{$json.timeline}}, Industry: {{$json.industry}}"
            }
          ]
        },
        "options": {
          "temperature": 0.1,
          "maxTokens": 500
        }
      },
      "typeVersion": 1
    },
    {
      "id": "score_evaluation",
      "name": "Score-Based Routing",
      "type": "n8n-nodes-base.switch",
      "position": [700, 100],
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{JSON.parse($json.choices[0].message.content).score}}",
              "operation": "largerEqual",
              "value2": 75
            },
            {
              "value1": "={{JSON.parse($json.choices[0].message.content).score}}",
              "operation": "largerEqual", 
              "value2": 50
            }
          ]
        },
        "fallbackOutput": 2
      },
      "typeVersion": 1
    },
    {
      "id": "high_value_alert",
      "name": "High-Value Lead Alert",
      "type": "n8n-nodes-base.slack",
      "position": [900, 50],
      "parameters": {
        "resource": "message",
        "channel": "#sales-alerts",
        "text": "ðŸš¨ HIGH-VALUE LEAD DETECTED ðŸš¨\nScore: {{JSON.parse($('lead_scoring').item.json.choices[0].message.content).score}}\nCompany: {{$('gdpr_consent_check').item.json.company_name}}\nBudget: {{$('gdpr_consent_check').item.json.budget_range}}\nTimeline: {{$('gdpr_consent_check').item.json.timeline}}\n\nAction Required: Immediate qualification within 30 minutes"
      },
      "typeVersion": 1
    },
    {
      "id": "crm_create_lead",
      "name": "Create Lead in HubSpot",
      "type": "n8n-nodes-base.hubspot",
      "position": [900, 150],
      "parameters": {
        "resource": "contact",
        "operation": "create",
        "email": "={{$('gdpr_consent_check').item.json.email}}",
        "additionalFields": {
          "company": "={{$('gdpr_consent_check').item.json.company_name}}",
          "firstname": "={{$('gdpr_consent_check').item.json.first_name}}",
          "lastname": "={{$('gdpr_consent_check').item.json.last_name}}",
          "phone": "={{$('gdpr_consent_check').item.json.phone}}",
          "lead_score": "={{JSON.parse($('lead_scoring').item.json.choices[0].message.content).score}}",
          "lead_source": "={{$('gdpr_consent_check').item.json.source}}",
          "consent_marketing": "={{$('gdpr_consent_check').item.json.consent_marketing}}",
          "consent_id": "={{$('gdpr_consent_check').item.json.consent_id}}",
          "region": "={{$('gdpr_consent_check').item.json.region}}"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "qualification_trigger",
      "name": "Trigger Qualification Process",
      "type": "n8n-nodes-base.webhook",
      "position": [1100, 150],
      "parameters": {
        "httpMethod": "POST",
        "path": "qualification-trigger",
        "responseMode": "lastNode",
        "options": {
          "noResponseBody": true
        }
      },
      "typeVersion": 1
    },
    {
      "id": "bant_qualification",
      "name": "BANT Qualification",
      "type": "n8n-nodes-base.openAi",
      "position": [1300, 150],
      "parameters": {
        "resource": "chat",
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are a BANT qualification assistant. Analyze the lead data and generate qualification questions focusing on Budget, Authority, Need, and Timeline. Return JSON with questions array and qualification strategy."
            },
            {
              "role": "user",
              "content": "=Generate BANT qualification for: {{$json}}"
            }
          ]
        },
        "options": {
          "temperature": 0.2,
          "maxTokens": 800
        }
      },
      "typeVersion": 1
    },
    {
      "id": "proposal_generation",
      "name": "AI Proposal Generation",
      "type": "n8n-nodes-base.openAi",
      "position": [1500, 150],
      "parameters": {
        "resource": "chat",
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are an AI proposal generator for OMNIKAI. Create comprehensive proposals including service description, technical architecture, compliance framework, timeline, and pricing. Use OMNIKAI templates and pricing models."
            },
            {
              "role": "user",
              "content": "=Generate proposal for qualified lead: {{$json}}"
            }
          ]
        },
        "options": {
          "temperature": 0.3,
          "maxTokens": 2000
        }
      },
      "typeVersion": 1
    },
    {
      "id": "proposal_approval",
      "name": "Proposal Approval Routing",
      "type": "n8n-nodes-base.switch",
      "position": [1700, 150],
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.estimated_value}}",
              "operation": "larger",
              "value2": 50000
            },
            {
              "value1": "={{$json.estimated_value}}",
              "operation": "larger",
              "value2": 10000
            }
          ]
        },
        "fallbackOutput": 2
      },
      "typeVersion": 1
    },
    {
      "id": "boss_approval",
      "name": "BOSS Approval Required",
      "type": "n8n-nodes-base.slack",
      "position": [1900, 100],
      "parameters": {
        "resource": "message",
        "channel": "#executive-approvals",
        "text": "ðŸ’° HIGH-VALUE PROPOSAL APPROVAL REQUIRED ðŸ’°\nDeal Value: â‚¬{{$json.estimated_value}}\nClient: {{$json.company_name}}\nProposal: {{$json.proposal_summary}}\n\n@boss Please review and approve within 24 hours"
      },
      "typeVersion": 1
    },
    {
      "id": "claude_approval",
      "name": "Claude-Flow Review",
      "type": "n8n-nodes-base.function",
      "position": [1900, 150],
      "parameters": {
        "functionCode": "// Claude-Flow automated approval for mid-tier deals\nconst proposal = items[0].json;\nconst dealValue = proposal.estimated_value;\n\n// Automated approval criteria\nconst autoApprove = (\n  dealValue >= 10000 && dealValue <= 50000 &&\n  proposal.risk_score < 0.3 &&\n  proposal.compliance_check === 'PASS'\n);\n\nif (autoApprove) {\n  return {\n    json: {\n      ...proposal,\n      approval_status: 'AUTO_APPROVED',\n      approved_by: 'Claude-Flow',\n      approved_at: new Date().toISOString()\n    }\n  };\n} else {\n  throw new Error('Manual review required for this proposal');\n}"
      },
      "typeVersion": 1
    },
    {
      "id": "auto_approval",
      "name": "Auto-Approve Standard",
      "type": "n8n-nodes-base.function",
      "position": [1900, 200],
      "parameters": {
        "functionCode": "// Auto-approval for standard deals under â‚¬10k\nconst proposal = items[0].json;\n\nreturn {\n  json: {\n    ...proposal,\n    approval_status: 'AUTO_APPROVED',\n    approved_by: 'System',\n    approved_at: new Date().toISOString()\n  }\n};"
      },
      "typeVersion": 1
    },
    {
      "id": "contract_generation",
      "name": "Generate Contract",
      "type": "n8n-nodes-base.openAi",
      "position": [2100, 150],
      "parameters": {
        "resource": "chat",
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are a contract generation system for OMNIKAI. Generate comprehensive service contracts including terms, SLAs, liability, compliance requirements, and payment terms. Use OMNIKAI standard clauses."
            },
            {
              "role": "user",
              "content": "=Generate contract for approved proposal: {{$json}}"
            }
          ]
        },
        "options": {
          "temperature": 0.1,
          "maxTokens": 3000
        }
      },
      "typeVersion": 1
    },
    {
      "id": "docusign_send",
      "name": "Send for E-Signature",
      "type": "n8n-nodes-base.docuSign",
      "position": [2300, 150],
      "parameters": {
        "operation": "send",
        "documentName": "OMNIKAI Service Contract",
        "documentContent": "={{$json.contract_content}}",
        "recipients": [
          {
            "email": "={{$('crm_create_lead').item.json.email}}",
            "name": "={{$('crm_create_lead').item.json.firstname}} {{$('crm_create_lead').item.json.lastname}}",
            "role": "signer"
          }
        ]
      },
      "typeVersion": 1
    },
    {
      "id": "signature_webhook",
      "name": "Signature Completion Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [2500, 150],
      "parameters": {
        "httpMethod": "POST",
        "path": "signature-complete",
        "responseMode": "responseNode"
      },
      "webhookId": "signature-complete",
      "typeVersion": 1
    },
    {
      "id": "project_initiation",
      "name": "Initiate Project",
      "type": "n8n-nodes-base.function",
      "position": [2700, 150],
      "parameters": {
        "functionCode": "// Project initiation automation\nconst contractData = items[0].json;\n\n// Generate project workspace\nconst projectId = 'PROJ_' + Date.now();\nconst projectData = {\n  project_id: projectId,\n  client_name: contractData.client_name,\n  contract_value: contractData.contract_value,\n  start_date: new Date().toISOString(),\n  estimated_completion: new Date(Date.now() + (contractData.timeline_days * 24 * 60 * 60 * 1000)).toISOString(),\n  team_assigned: contractData.required_skills,\n  status: 'INITIATED'\n};\n\nreturn {\n  json: projectData\n};"
      },
      "typeVersion": 1
    },
    {
      "id": "invoice_generation",
      "name": "Generate Invoice",
      "type": "n8n-nodes-base.function",
      "position": [2900, 150],
      "parameters": {
        "functionCode": "// Invoice generation with VAT calculation\nconst project = items[0].json;\nconst clientRegion = project.client_region || 'EU';\n\n// VAT calculation based on region\nlet vatRate = 0;\nif (clientRegion === 'EU') {\n  vatRate = 0.19; // German VAT rate\n} else if (clientRegion === 'UK') {\n  vatRate = 0.20; // UK VAT rate\n}\n\nconst netAmount = project.contract_value;\nconst vatAmount = netAmount * vatRate;\nconst grossAmount = netAmount + vatAmount;\n\nconst invoice = {\n  invoice_id: 'INV_' + Date.now(),\n  project_id: project.project_id,\n  client_name: project.client_name,\n  net_amount: netAmount,\n  vat_rate: vatRate,\n  vat_amount: vatAmount,\n  gross_amount: grossAmount,\n  currency: 'EUR',\n  due_date: new Date(Date.now() + (30 * 24 * 60 * 60 * 1000)).toISOString(),\n  payment_terms: '30 days net',\n  status: 'SENT'\n};\n\nreturn {\n  json: invoice\n};"
      },
      "typeVersion": 1
    },
    {
      "id": "payment_tracking",
      "name": "Payment Status Tracking",
      "type": "n8n-nodes-base.webhook",
      "position": [3100, 150],
      "parameters": {
        "httpMethod": "POST",
        "path": "payment-received",
        "responseMode": "responseNode"
      },
      "webhookId": "payment-received",
      "typeVersion": 1
    },
    {
      "id": "completion_notification",
      "name": "Sales Cycle Complete",
      "type": "n8n-nodes-base.slack",
      "position": [3300, 150],
      "parameters": {
        "resource": "message",
        "channel": "#sales-success",
        "text": "ðŸŽ‰ SALES CYCLE COMPLETED ðŸŽ‰\nClient: {{$('project_initiation').item.json.client_name}}\nValue: â‚¬{{$('invoice_generation').item.json.gross_amount}}\nProject ID: {{$('project_initiation').item.json.project_id}}\n\nPayment received and project initiated successfully!"
      },
      "typeVersion": 1
    },
    {
      "id": "kpi_logging",
      "name": "Log KPIs and Metrics",
      "type": "n8n-nodes-base.postgres",
      "position": [3300, 250],
      "parameters": {
        "operation": "insert",
        "table": "sales_metrics",
        "columns": "lead_id,lead_score,qualification_time,proposal_time,contract_time,payment_time,total_cycle_time,deal_value,client_region,conversion_stage",
        "values": "={{$('gdpr_consent_check').item.json.lead_id}},{{JSON.parse($('lead_scoring').item.json.choices[0].message.content).score}},{{$('bant_qualification').item.json.processing_time}},{{$('proposal_generation').item.json.processing_time}},{{$('contract_generation').item.json.processing_time}},{{$('payment_tracking').item.json.processing_time}},{{$('completion_notification').item.json.total_time}},{{$('invoice_generation').item.json.gross_amount}},{{$('gdpr_consent_check').item.json.region}},COMPLETED"
      },
      "typeVersion": 1
    },
    {
      "id": "error_handler",
      "name": "Error Handling and Logging",
      "type": "n8n-nodes-base.function",
      "position": [1600, 350],
      "parameters": {
        "functionCode": "// Comprehensive error handling and logging\nconst error = items[0].json;\nconst timestamp = new Date().toISOString();\n\n// Log error details\nconst errorLog = {\n  timestamp: timestamp,\n  workflow_id: 'sales_core_pipeline',\n  error_type: error.type || 'UNKNOWN',\n  error_message: error.message || 'No message provided',\n  node_id: error.node || 'UNKNOWN',\n  lead_id: error.lead_id || null,\n  severity: error.severity || 'MEDIUM',\n  requires_human_intervention: error.severity === 'HIGH'\n};\n\n// Determine escalation requirements\nif (errorLog.severity === 'HIGH' || errorLog.requires_human_intervention) {\n  errorLog.escalation_required = true;\n  errorLog.escalation_target = 'Claude-Flow';\n}\n\nreturn {\n  json: errorLog\n};"
      },
      "typeVersion": 1
    },
    {
      "id": "abort_criteria_check",
      "name": "Abort Criteria Monitoring",
      "type": "n8n-nodes-base.function",
      "position": [1600, 450],
      "parameters": {
        "functionCode": "// Monitor abort criteria and trigger alerts\nconst metrics = items[0].json;\nconst currentTime = new Date();\nconst sevenDaysAgo = new Date(currentTime.getTime() - (7 * 24 * 60 * 60 * 1000));\nconst fourteenDaysAgo = new Date(currentTime.getTime() - (14 * 24 * 60 * 60 * 1000));\n\n// Check abort criteria\nconst abortChecks = {\n  lead_response_time: metrics.avg_lead_response_hours > 4,\n  qualification_rate: metrics.qualification_rate < 0.15,\n  gdpr_violations: metrics.gdpr_violations > 0,\n  cost_per_lead: metrics.cost_per_qualified_lead > 200,\n  proposal_time: metrics.avg_proposal_hours > 48,\n  meeting_conversion: metrics.meeting_conversion_rate < 0.40,\n  close_rate: metrics.close_rate < 0.20,\n  average_deal_size: metrics.avg_deal_size < 15000\n};\n\n// Count failed criteria\nconst failedCriteria = Object.keys(abortChecks).filter(key => abortChecks[key]);\n\nconst result = {\n  timestamp: currentTime.toISOString(),\n  failed_criteria: failedCriteria,\n  abort_required: failedCriteria.length >= 3,\n  escalation_level: failedCriteria.length >= 3 ? 'BOSS' : failedCriteria.length >= 1 ? 'Claude-Flow' : 'NONE'\n};\n\nreturn {\n  json: result\n};"
      },
      "typeVersion": 1
    }
  ],
  "connections": {
    "lead_intake": {
      "main": [
        [
          {
            "node": "gdpr_consent_check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gdpr_consent_check": {
      "main": [
        [
          {
            "node": "lead_scoring",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lead_scoring": {
      "main": [
        [
          {
            "node": "score_evaluation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "score_evaluation": {
      "main": [
        [
          {
            "node": "high_value_alert",
            "type": "main",
            "index": 0
          },
          {
            "node": "crm_create_lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "crm_create_lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "crm_create_lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "crm_create_lead": {
      "main": [
        [
          {
            "node": "qualification_trigger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qualification_trigger": {
      "main": [
        [
          {
            "node": "bant_qualification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "bant_qualification": {
      "main": [
        [
          {
            "node": "proposal_generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "proposal_generation": {
      "main": [
        [
          {
            "node": "proposal_approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "proposal_approval": {
      "main": [
        [
          {
            "node": "boss_approval",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "claude_approval",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "auto_approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "boss_approval": {
      "main": [
        [
          {
            "node": "contract_generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "claude_approval": {
      "main": [
        [
          {
            "node": "contract_generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "auto_approval": {
      "main": [
        [
          {
            "node": "contract_generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "contract_generation": {
      "main": [
        [
          {
            "node": "docusign_send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "docusign_send": {
      "main": [
        [
          {
            "node": "signature_webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "signature_webhook": {
      "main": [
        [
          {
            "node": "project_initiation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "project_initiation": {
      "main": [
        [
          {
            "node": "invoice_generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "invoice_generation": {
      "main": [
        [
          {
            "node": "payment_tracking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "payment_tracking": {
      "main": [
        [
          {
            "node": "completion_notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "kpi_logging",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "error_handler"
  },
  "staticData": {},
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "1.0.0",
  "triggerCount": 3,
  "tags": [
    {
      "id": "sales",
      "name": "Sales Pipeline"
    },
    {
      "id": "compliance",
      "name": "GDPR Compliant"
    },
    {
      "id": "automation",
      "name": "Full Automation"
    }
  ],
  "kpis": {
    "lead_response_time_hours": {
      "target": 2,
      "abort_threshold": 4,
      "measurement": "average_over_7_days"
    },
    "qualification_rate_percent": {
      "target": 25,
      "abort_threshold": 15,
      "measurement": "percentage_of_leads"
    },
    "lead_to_opportunity_conversion_percent": {
      "target": 15,
      "abort_threshold": 10,
      "measurement": "percentage_conversion"
    },
    "proposal_generation_time_hours": {
      "target": 24,
      "abort_threshold": 48,
      "measurement": "average_time"
    },
    "meeting_conversion_rate_percent": {
      "target": 60,
      "abort_threshold": 40,
      "measurement": "percentage_conversion"
    },
    "close_rate_percent": {
      "target": 30,
      "abort_threshold": 20,
      "measurement": "percentage_of_meetings"
    },
    "average_deal_size_eur": {
      "target": 25000,
      "abort_threshold": 15000,
      "measurement": "average_contract_value"
    },
    "contract_cycle_time_days": {
      "target": 7,
      "abort_threshold": 14,
      "measurement": "average_days"
    },
    "payment_collection_rate_percent": {
      "target": 95,
      "abort_threshold": 85,
      "measurement": "percentage_collected"
    },
    "gdpr_compliance_score": {
      "target": 100,
      "abort_threshold": 99,
      "measurement": "percentage_compliant"
    }
  },
  "abort_criteria": {
    "timeframe_days": 14,
    "criteria": [
      "Lead response time consistently >4 hours",
      "Qualification rate <15%",
      "Any GDPR violations detected",
      "Cost per qualified lead >â‚¬200",
      "Proposal generation time >48 hours",
      "Meeting conversion rate <40%",
      "Close rate <20%",
      "Average deal size <â‚¬15,000",
      "Contract cycle time >14 days average",
      "Payment collection rate <85%"
    ],
    "escalation_procedure": "3+ failed criteria = BOSS escalation, 1-2 failed criteria = Claude-Flow review"
  },
  "logging_requirements": {
    "all_executions": true,
    "performance_metrics": true,
    "compliance_activities": true,
    "client_interactions": true,
    "error_tracking": true,
    "audit_trail": "immutable"
  },
  "assumptions": [
    "Continued demand for AI-powered business solutions",
    "Stable regulatory environment with GDPR compliance",
    "Reliable internet connectivity and cloud services",
    "Adequate staffing and skill levels maintained",
    "Third-party integrations remain operational",
    "Economic conditions support business technology investment"
  ],
  "dependencies": [
    "HubSpot CRM integration",
    "OpenAI API for AI processing",
    "DocuSign for electronic signatures",
    "Slack for notifications and alerts",
    "PostgreSQL for metrics storage",
    "GDPR Transfer Gate system",
    "Payment processing infrastructure"
  ]
}

